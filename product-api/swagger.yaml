basePath: /
consumes:
- application/json
definitions:
  ErrProductNotFound:
    description: ErrProductNotFound is an error received when a product with given specifications is not found
    properties:
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/ParthAhuja143/GoWithMicroServices/product-api/errors
  ErrInvalidURI:
    description: ErrInvalidURI is an error received when the request is send to an invalid URI
    properties:
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/ParthAhuja143/GoWithMicroServices/product-api/errors
  ErrUnmarshal: 
    description: ErrUnmarshal is a error received during unmarshalling an object
    properties:
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/ParthAhuja143/GoWithMicroServices/product-api/errors
  ErrInternalServer:
    description: ErrInternalServer is an error received when there's an internal server error
    properties:
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/ParthAhuja143/GoWithMicroServices/product-api/errors
  ErrValidatingProduct:
    description: ErrValidatingProduct is an error received when the request body is in invalid format
    properties:
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/ParthAhuja143/GoWithMicroServices/product-api/errprs
  ErrMarshal:
    description: ErrMarshal is a error received during marshalling an object
    properties:
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/ParthAhuja143/GoWithMicroServices/product-api/handlers
  Product:
    description: Product defines the structure for an API product
    properties:
      description:
        description: the description for this poduct
        maxLength: 10000
        type: string
        x-go-name: Description
      id:
        description: the id for the product
        format: int64
        minimum: 1
        type: integer
        x-go-name: ID
      name:
        description: the name for this poduct
        maxLength: 255
        type: string
        x-go-name: Name
      price:
        description: the price for the product
        format: float
        minimum: 0.01
        type: number
        x-go-name: Price
      sku:
        description: the SKU for the product
        pattern: '[a-z]+-[a-z]+-[a-z]+'
        type: string
        x-go-name: SKU
    required:
    - name
    - price
    - sku
    type: object
    x-go-package: github.com/ParthAhuja143/GoWithMicroServices/product-api/data
info:
  description: Products API
  title: Documentation for Product API
  version: 1.0.0
paths:
  /products:
    get:
      description: Return a list of products from the database
      operationId: listProducts
      responses:
        "200":
          $ref: '#/responses/productsResponse'
        "404":
          $ref: '#/responses/errUnmarshal'
      tags:
      - products
    post:
      description: Create a new product
      operationId: createProduct
      parameters:
      - description: |-
          Product data structure to Update or Create.
          Note: the id field is ignored by update and create operations
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        "200":
          $ref: '#/responses/productResponse'
        "404":
          $ref: '#/responses/errUnmarshal'
      tags:
      - products
    /products/{id}:
      put:
        description: Update a products details
        operationId: updateProduct
        parameters:
        - description: |-
            Product data structure to Update or Create.
            Note: the id field is ignored by update and create operations
          in: body
          name: Body
          required: true
          schema:
            $ref: '#/definitions/Product'
        - description: The id of the product for which the operation relates
          format: int64
          in: path
          name: id
          required: true
          type: integer
          x-go-name: ID
        responses:
          "201":
            $ref: '#/responses/noContentResponse'
          "404":
            $ref: '#/responses/errorResponse'
          "422":
            $ref: '#/responses/errorValidation'
        tags:
        - products
      delete:
        description: Update a products details
        operationId: deleteProduct
        responses:
          "201":
            $ref: '#/responses/noContentResponse'
          "404":
            $ref: '#/responses/errorResponse'
          "501":
            $ref: '#/responses/errorResponse'
        tags:
        - products
      get:
        description: Return a list of products from the database
        operationId: listSingle
        responses:
          "200":
            $ref: '#/responses/productResponse'
          "404":
            $ref: '#/responses/errorResponse'
        tags:
        - products
produces:
- application/json
responses:
  errProductNotFound:
    description: Error received when a product with given specifications is not found
    schema:
      $ref: '#/definitions/ErrProductNotFound'
  errInvalidURI:
    description: Error received when the request is send to an invalid URI
    schema:
      $ref: '#/definitions/ErrInvalidURI'
  errUnmarshal:
    description: Error received during unmarshalling an object
    schema:
      $ref: '#/definitions/ErrUnmarshal'
  errInternalServer:
    description: Error received when there is an internal server error
    schema:
      $ref: '#/definitions/ErrInternalServer'
  errValidatingProduct:
    description: Error received during validating a request body product
    schema:
      $ref: '#/definitions/ErrValidatingProduct'
  errMarshal:
    description: Error received during marshalling an object
    schema:
      $ref: '#/definitions/ErrMarshal'
  productResponse:
    description: Data structure representing a single product
    schema:
      $ref: '#/definitions/Product'
  productsResponse:
    description: A list of products
    schema:
      items:
        $ref: '#/definitions/Product'
      type: array
schemes:
- http
swagger: "2.0"